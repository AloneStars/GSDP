<project xmlns="http://maven.apache.org/POM/4.0.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <groupId>GSDP</groupId>
  <artifactId>GSDP</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>GSDP</name>
  <description/>
 
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <javaee.version>7.0</javaee.version>
    <javax.servlet.version>1.2.2</javax.servlet.version>
    <junit.version>4.11</junit.version>
    <slf4j-log4j.version>1.7.12</slf4j-log4j.version>
    <mysql.version>5.1.35</mysql.version>
    <c3p0.version>0.9.1.2</c3p0.version>
    <mybatis.version>3.3.0</mybatis.version>
    <mybatis-spring.version>1.2.3</mybatis-spring.version>
    <jackson.version>2.5.4</jackson.version>
    <spring.version>4.0.5.RELEASE</spring.version>
    <commons-lang.version>2.6</commons-lang.version>
    <commons-fileupload.version>1.3.1</commons-fileupload.version>
  </properties>
  
  
  <dependencyManagement>
  	<dependencies>
  	    <dependency>
  	  		<groupId>org.springframework</groupId>
  	 		<artifactId>spring-framework-bom</artifactId>
  	  		<version>${spring.version}</version>
  	  		<type>pom</type>
  	  		<scope>import</scope>
    	</dependency>
  	</dependencies>
  </dependencyManagement> 
  
  
  <dependencies>
   <!-- 引入junit单元测试 -->
    <dependency>
    	<groupId>junit</groupId>
    	<artifactId>junit</artifactId>
    	<version>${junit.version}</version>
    	<!-- 在test任务的时候使用 -->
    	<scope>test</scope>
    </dependency>
    
    <!-- 引入日志相关的jar包 -->
    <!-- 
    	java常见的日志：slf4j ,log4j,logback,common-logging
    	slf4j:是一个规范/接口
    	而日志的真正实现：log4j,logback,common-logging
     -->
    <dependency>  
    	<groupId>org.slf4j</groupId>  
    	<artifactId>slf4j-log4j12</artifactId>  
    	<version>${slf4j-log4j.version}</version>  
	</dependency> 
    
    
    <!-- 数据库相关的依赖 -->
    <dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
    	<version>${mysql.version}</version>
    	<!-- 因为数据库驱动只有在真正运行的时候才会工作，所以我们可以把其scope设置为runtime -->
    	<scope>runtime</scope>
    </dependency>
    <dependency>
    	<groupId>c3p0</groupId>
    	<artifactId>c3p0</artifactId>
    	<version>${c3p0.version}</version>
    </dependency>
    
    
    <!-- mybatis相关的依赖 -->
    <dependency>
    	<groupId>org.mybatis</groupId>
    	<artifactId>mybatis</artifactId>
    	<version>${mybatis.version}</version>
    </dependency>
    <!-- mybatis自身实现的整合spring依赖 -->
    <dependency>
    	<groupId>org.mybatis</groupId>
    	<artifactId>mybatis-spring</artifactId>
    	<version>${mybatis-spring.version}</version>
    </dependency>
    
    
    <!-- jackson的相关依赖，当我们在使用json的时候 -->
    <dependency>
	  	<groupId>com.fasterxml.jackson.core</groupId>
	  	<artifactId>jackson-databind</artifactId>
	  	<version>${jackson.version}</version>
	  </dependency>
	  
	  <!-- spring相关的依赖 -->
      <dependency>
	  	<groupId>org.springframework</groupId>
  	 	<artifactId>spring-webmvc</artifactId>
	  </dependency>
	  <dependency>
	  <groupId>org.springframework</groupId>
	  <artifactId>spring-jdbc</artifactId>
	  </dependency>
	  
	  <!-- 我们要用到junit和spring的整合，所以我们要导入下面的依赖 -->
	  <dependency>
	  	<groupId>org.springframework</groupId>
	  	<artifactId>spring-test</artifactId>
	  </dependency>
	  
	  
	  <!-- 下面是我们上传和下载文件需要导入的包 -->
	<dependency>
    	<groupId>commons-lang</groupId>
    	<artifactId>commons-lang</artifactId>
    	<version>${commons-lang.version}</version>
    </dependency>
      <!-- 用commons-fileupload来进行文件上传 -->
     <dependency>
	  	<groupId>commons-fileupload</groupId>
  	 	<artifactId>commons-fileupload</artifactId>
  	 	<version>${commons-fileupload.version}</version>
	  </dependency>
  
  	<!-- 增加bean的验证依赖,缺少了可用的验证依赖的实现类 -->
  	<dependency>
    	<groupId>org.hibernate</groupId>
    	<artifactId>hibernate-validator</artifactId>
    	<version>5.2.4.Final</version>
	</dependency>
	
      <!-- 下面是一些基本的javaee需要导入的包 -->
      <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-api</artifactId>
      <version>${javaee.version}</version>
      <scope>provided</scope>
    </dependency>
    
    <dependency>
      <groupId>org.glassfish.web</groupId>
      <artifactId>javax.servlet.jsp.jstl</artifactId>
      <version>${javax.servlet.version}</version>
    </dependency>
    
  </dependencies>
  
  
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.3.2</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <version>3.1</version>
          <failOnMissingWebXml>false</failOnMissingWebXml>
        </configuration>
      </plugin>
    </plugins>
  </build>
  
  
</project>